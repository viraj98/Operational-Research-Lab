clc;
% ---  Parcell Problem  ----
% --  Decision Variable ----
% xij = 1 if container i parcelled product j and 0 otherwise
% where i=1:5 and j=1:10
% yi = 1 if container i have some products otherwise 0
% Objective function, Max Z = 250*(1.1x11+1.3x21+2x31+1x41+3x51)+270*(....)...220*(2.5x110+3x210+2.5x310+2x410+2x510)
% -(700y1+1000y2+700y3+800y4+1200y5) 
%% --- Constraints -----%%
% -- Volume constrains --
% 250x11 + 270x12 + 150x13 + 300x14 + 320x15 + 180x16 + 400x17 + 450x18 + 500x19 + 220x110 <= 1000
% 250x21 + 270x22 + 150x23 + 300x24 + 320x25 + 180x26 + 400x27 + 450x28 + 500x29 + 220x210 <= 1200
% 250x31 + 270x32 + 150x33 + 300x34 + 320x35 + 180x36 + 400x37 + 450x38 + 500x39 + 220x310 <= 800
% 250x41 + 270x42 + 150x43 + 300x44 + 320x45 + 180x46 + 400x47 + 450x48 + 500x49 + 220x410 <= 1000
% 250x51 + 270x52 + 150x53 + 300x54 + 320x55 + 180x56 + 400x57 + 450x58 + 500x59 + 220x510 <= 1500
% -- Container selectivity Constrain --
% x11+x12+x13+1x14+x15+x16+x17+x18+x19+x110-10y1<=0
% x21+x22+x23+1x24+x25+x26+x27+x28+x29+x210-10y2<=0
% x31+x32+x33+1x34+x35+x36+x37+x38+x39+x310-10y3<=0
% x41+x42+x43+1x44+x45+x46+x47+x48+x49+x410-10y4<=0
% x51+x52+x53+1x54+x55+x56+x57+x58+x59+x510-10y5<=0
% -- Number of Product Available Constrain --
% x11+x21+x31+x41+x51<=1
% x12+x22+x32+x42+x52<=1
% x13+x23+x33+x43+x53<=1
% x14+x24+x34+x44+x54<=1
% x15+x25+x35+x45+x55<=1
% x16+x26+x36+x46+x56<=1
% x17+x27+x37+x47+x57<=1
% x18+x28+x38+x48+x58<=1
% x19+x29+x39+x49+x59<=1
% x110+x210+x310+x410+x510<=1
% ----------------------------------------------------------------------------------------------------------
%% ---- %%
C = -[250*1.1; 270*2; 150*3; 300*3.5; 320*1.5; 180; 400*6; 450*3; 500*5; 220*2.5;
     250*1.3; 270*2; 150*2; 300*2; 320*6; 180*3; 400*2; 450*4; 500*6; 220*3;
     250*2; 270*1.5; 150*1; 300*1; 320*1.5; 180*1.5; 400*7.5; 450*2.5; 500*4.5; 220*2.5;
     250*1; 270*3; 150*2;300*2; 320*2; 180*2; 400*1; 450*1.5; 500*3; 220*2;
     250*3; 270*1; 150*1.5; 300*3; 320*4; 180*1.5; 400*3; 450*2; 500*4; 220*2;-700;-1000;-700;-800;-1200];
A = [250 270 150 300 320 180 400 450 500 220 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 250 270 150 300 320 180 400 450 500 220 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 250 270 150 300 320 180 400 450 500 220 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 250 270 150 300 320 180 400 450 500 220 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 250 270 150 300 320 180 400 450 500 220 0 0 0 0 0;
     1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -50 0 0 0 0;
     0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -50 0 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -50 0 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 -50 0;
     0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 -50;
     1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0;
     0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0];
 
b = [1000;1200;800;1000;1500;0;0;0;0;0;1;1;1;1;1;1;1;1;1;1];
      
lb = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
ub = [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1];
intcon = 1:55;
[x,fval] = intlinprog(C,intcon,A,b,[],[],lb,ub);
fprintf('Total Profit : %d\n\n',-fval);
for i=51:55
    if(x(i)>0)
        fprintf('Container %d is selected\n',i-50);
    else
        fprintf('Container %d is not selected\n\n',i-50);
    end
end
for i=1:50
    if(x(i)>0 && i<=10)
        fprintf('Container 1 contains Product %d\n',i);
    end
    if(x(i)>0 && i>10 && i<=20)
        fprintf('Container 2 contains Product %d\n',i-10);
    end
    if(x(i)>0 && i>20 && i<=30)
        fprintf('Container 3 contains Product %d\n',i-20);
    end
    if(x(i)>0 && i>30 && i<=40)
        fprintf('Container 4 contains Product %d\n',i-30);
    end
    if(x(i)>0 && i>40 && i<=50)
        fprintf('Container 5 contains Product %d\n',i-40);
    end
end
    
       